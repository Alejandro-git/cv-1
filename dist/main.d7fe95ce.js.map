{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","console","log","length","n","step","setTimeout","innerHTML","substring","window","scrollTo"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAE9BC,EAAQF,SAASC,cAAc,UAE/BE,EAAJ,6jCAgDIC,EAAU,GAIdC,QAAQC,IAAIH,EAAOI,QACnB,IAAIC,EAAI,EAOJC,EAAO,SAAPA,IACAC,WAAW,WACPL,QAAQC,IAAIE,GAEM,OAAdL,EAAOK,GAEPJ,GAAW,OACQ,MAAdD,EAAOK,GAEZJ,GAAW,SAIXA,GAAWD,EAAOK,GAEtBT,EAAKY,UAAYP,EAEjBF,EAAMS,UAAYR,EAAOS,UAAU,EAAEJ,GACrCK,OAAOC,SAAS,EAAE,OAClBf,EAAKe,SAAS,EAAG,OAEdN,EAAIL,EAAOI,OAAO,IAEjBC,GAAK,EACLC,MAIN,KAMNA","file":"main.d7fe95ce.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html');\r\n// 通过css选择器找到某个元素\r\nlet style = document.querySelector('#style');\r\n\r\nlet string = `/*你好，我叫小韩\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n**/\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n * 注意看好了\r\n * 首先，把 div 变成一个圆\r\n **/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/* 八卦是阴阳形成的\r\n * 一黑一白\r\n **/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加上阴阳眼 */\r\n\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\r\n}\r\n`;\r\n\r\nlet string2 = '';\r\n// string = string.replace(/\\n/g,'<br>') let等于-1之后去掉\r\n// replace 可以把字符串里的（什么，变成什么），replace 只会把第一个空格转换，\r\n// 这里需要阵则表达式，也就是把 \" '\\n' \" 变为 \" /\\n/g \" ;\r\nconsole.log(string.length)\r\nlet n = 0;\r\n\r\n// demo.innerHTML = string.substring(0,n);\r\n// string.substring 从哪里开始到哪里结束\r\n// let n = -1;“demo.innerHTML = string.substring(0,n);这句话可以省”\r\n// 等于-1时下面函数一样是从零开始\r\n\r\nlet step = () =>{\r\n    setTimeout(()=>{\r\n        console.log(n)\r\n        // n = n + 1  为什么第一个从n+1,开始，不需要，又让let n = 0;\r\n        if (string[n] === \"\\n\"){\r\n            // 如果是回车，就不照搬\r\n            string2 += \"<br>\";\r\n        }else if(string[n] === \" \"){\r\n            // html 里面的空格是用 \"&nbsp;\" 表示的\r\n            string2 += \"&nbsp;\";\r\n            \r\n        }else{\r\n            // 如果不是回车就照搬\r\n            string2 += string[n];\r\n        }\r\n        html.innerHTML = string2;\r\n        // demo.innerHTML = string.substring(0,n);\r\n        style.innerHTML = string.substring(0,n);\r\n        window.scrollTo(0,99999);\r\n        html.scrollTo(0, 99999);\r\n\r\n        if(n < string.length-1){\r\n            // 如果不是最后一个,就继续\r\n            n += 1\r\n            step()\r\n        }else{\r\n            // 是最后一个,什么都不干\r\n        }        \r\n    },10) ;  \r\n}\r\n\r\n// setTimeout只响应一次；setInterval每个多长时间响应一次；\r\n// 老手一般不用setInterval,用递归的setTimeout,这样可以随时停止\r\n\r\nstep ()\r\n\r\n"]}